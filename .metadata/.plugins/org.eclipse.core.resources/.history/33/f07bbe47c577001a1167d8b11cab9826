package mapreduce;

import java.io.IOException;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class ageCount {
public static void main(String[] args) throws ClassNotFoundException, IOException, InterruptedException {
	Configuration conf = new Configuration();
	Job wcjob = Job.getInstance(conf);
	//指定我这个job所在的jar包
	wcjob.setJarByClass(ageCount.class);
	
	//指定map 和 reduce类所在的class
	wcjob.setMapperClass(wordcountMap.class);
	wcjob.setReducerClass(wordcountReduce.class);
	
	//设置业务逻辑Mapper类的输出key和value的数据类型
	wcjob.setMapOutputKeyClass(Text.class);
	wcjob.setMapOutputValueClass(IntWritable.class);
	
	//设置业务逻辑Reducer类的输出key和value的数据类型
	wcjob.setOutputKeyClass(Text.class);
	wcjob.setOutputValueClass(IntWritable.class);

	//指定要处理的数据所在的位置
	FileInputFormat.setInputPaths(wcjob, new Path("D://datas/gv/newdatas/agegroup.txt"));
	//指定处理完成之后的结果所保存的位置
	FileOutputFormat.setOutputPath(wcjob, new Path("hdfs://192.168.247.135:9000/gv"));

	//向yarn集群提交这个job
	boolean res = wcjob.waitForCompletion(true);
	System.exit(res?0:1);
}

class wordcountMap extends Mapper<LongWritable, Text, Text, IntWritable>{ 
	@Override
	//key行号
	//value 文本
	//context 上下文对象
	//每一行数据输入就执行一次map函数
	protected void map(LongWritable key, Text value, Mapper<LongWritable, Text, Text, IntWritable>.Context context)
			throws IOException, InterruptedException {
		// TODO Auto-generated method stub
		//super.map(key, value, context);
		String line=value.toString();
		String[] arr=line.split("||");
		for(String ele:arr) {
			context.write(new Text(ele), new IntWritable(1));
		}
	}
}

}
